ext {
    fabMenuVersion = '1.10.1'
    bottomNavigationVersion = '2.1.0'
    constraintLayoutVersion = '1.1.0-beta3'
    swipeRevealVersion = '1.4.0'
    cropViewVersion = '1.1.7'
    cameraViewVersion = '1.4.1'

    views = [
            fabMenu         : "com.getbase:floatingactionbutton:${fabMenuVersion}",
            constraintLayout: "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"
    ]

    supportLibraryVersion = '26.0.0-beta2'

    support = [
            design      : "com.android.support:design:${supportLibraryVersion}",
            recyclerView: "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            cardView    : "com.android.support:cardview-v7:${supportLibraryVersion}",
            appCompat   : "com.android.support:appcompat-v7:${supportLibraryVersion}",
            appCompatV4 : "com.android.support:support-v4:${supportLibraryVersion}",
            appCompatV13: "com.android.support:support-v13:${supportLibraryVersion}",
            annotation  : "com.android.support:support-annotations:${supportLibraryVersion}",
            dataBinding : "com.android.databinding:compiler:$android_plugin_version"
    ]


    retrofitVersion = '2.3.0'
    loggingInterceptorVersion = '3.8.1'
    leakCanaryVersion = '1.5.4'

    squareup = [
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitGson      : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitRxAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}",
            leakCanaryDebug   : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakCanaryRelease : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
            leakCanaryTest    : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
    ]


    jodaTimeVersion = '2.9.9'

    joda = [
            time: "joda-time:joda-time:${jodaTimeVersion}"
    ]

    glideVersion = '4.1.1'
    glideTransformationsVersion = '3.0.1'

    glide = [
            glide               : "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler       : "com.github.bumptech.glide:compiler:${glideVersion}",
            glideTransformations: "jp.wasabeef:glide-transformations:${glideTransformationsVersion}"
    ]


    rxJavaVersion = '2.0.6'
    rxAndroidVersion = '2.0.1'
    rxGalleryVersion = '0.6.0'
    rxPermissionsVersion = '0.9.4@aar'
    rxKotlinVersion = '2.2.0'
    rxBindingVersion = '2.0.0'

    rx = [
            java           : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin         : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            android        : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            binding        : "com.jakewharton.rxbinding2:rxbinding-kotlin:${rxBindingVersion}",
            permissions    : "com.tbruyelle.rxpermissions2:rxpermissions:${rxPermissionsVersion}"
    ]

    crashlyticsVersion = '2.8.0@aar'

    fabric = [
            crashlytics: "com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}"
    ]

    daggerVersion = '2.11'
    dagger = [
            compiler:                    "com.google.dagger:dagger-compiler:${daggerVersion}",
            processor:                   "com.google.dagger:dagger-android-processor:${daggerVersion}",
            di      :                    "com.google.dagger:dagger:${daggerVersion}",
            diSupport :                  "com.google.dagger:dagger-android-support:${daggerVersion}",
    ]

    paperParcelVersion = '2.0.1'
    paperParcel = [
            library : "nz.bradcampbell:paperparcel:${paperParcelVersion}",
            kotlin  : "nz.bradcampbell:paperparcel-kotlin:${paperParcelVersion}",
            compiler: "nz.bradcampbell:paperparcel-compiler:${paperParcelVersion}"
    ]

    mockitoCore = '2.12.0'
    junitVersion = '4.12'
    espressoCoreVersion = '3.0.1'
    androidTestRunnerVersion = '1.0.1'
    dexmaker = '1.2'

    test = [
            junit          : "junit:junit:${junitVersion}",
            dexmaker       : "com.google.dexmaker:dexmaker:${dexmaker}",
            dexmakerMockito: "com.google.dexmaker:dexmaker-mockito:${dexmaker}",
            mockitoCore    : "org.mockito:mockito-core:${mockitoCore}",
            espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoCoreVersion}",
            testRunner     : "com.android.support.test:runner:${androidTestRunnerVersion}"
    ]


    kotlinBase = [
            sdk: "org.jetbrains.kotlin:kotlin-stdlib-jre7:${kotlin_version}"
    ]
}